package com.election.mapping;// Generated Dec 28, 2017 3:24:17 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * LocalAuthority generated by hbm2java
 */
@Entity
@Table(name="local_authority"
    ,catalog="elct_survey"
)
public class LocalAuthority  implements java.io.Serializable {


     private String code;
     private District district;
     private String description;
     private Set<PartyLa> partyLas = new HashSet(0);
     private Set<Ward> wards = new HashSet(0);

    public LocalAuthority() {
    }

	
    public LocalAuthority(String code) {
        this.code = code;
    }
    public LocalAuthority(String code, District district, String description, Set<PartyLa> partyLas, Set<Ward> wards) {
       this.code = code;
       this.district = district;
       this.description = description;
       this.partyLas = partyLas;
       this.wards = wards;
    }
   
     @Id 

    
    @Column(name="code", unique=true, nullable=false, length=10)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="district_code")
    public District getDistrict() {
        return this.district;
    }
    
    public void setDistrict(District district) {
        this.district = district;
    }

    
    @Column(name="description", length=100)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="localAuthority")
    public Set<PartyLa> getPartyLas() {
        return this.partyLas;
    }
    
    public void setPartyLas(Set<PartyLa> partyLas) {
        this.partyLas = partyLas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="localAuthority")
    public Set<Ward> getWards() {
        return this.wards;
    }
    
    public void setWards(Set<Ward> wards) {
        this.wards = wards;
    }




}


